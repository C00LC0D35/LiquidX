/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other;

import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.event.WorldEvent;
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode;
import net.ccbluex.liquidbounce.utils.PacketUtils;
import net.ccbluex.liquidbounce.utils.timer.MSTimer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C09PacketHeldItemChange;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

import java.util.LinkedList;

public final class Vulcan extends DisablerMode {

    public Vulcan() {
        super("Vulcan");
    }
    private int prevSlot;
    private final MSTimer timer = new MSTimer();
    private final LinkedList<C0FPacketConfirmTransaction> transactions = new LinkedList<>();


    @Override
    public void onPacket(PacketEvent event) {
        Packet<?> packet = event.getPacket();

        if (mc.isSingleplayer()) return;

        //HeldItem Spoof Disabler
        if (packet instanceof C09PacketHeldItemChange) {
            if (getDisablerModule().heldItemSpoof.get()) {
                C09PacketHeldItemChange heldItemChange = (C09PacketHeldItemChange) packet;
                if (heldItemChange.getSlotId() == prevSlot) {
                    event.cancelEvent();
                    alerts("Packet C09 Cancel (HeldItem Spoof Check Disabled)");
                } else {
                    prevSlot = heldItemChange.getSlotId();
                }
            }
        }

        //KillAura KeepSprint Disabler
        if (packet instanceof C0BPacketEntityAction) {
            if (getDisablerModule().keepSprint.get()) {
                event.cancelEvent();
                alerts("Packet C0B Cancel (KillAura KeepSprint Check Disabled)");
            }
        }

        //Velocity Disabler
        if (packet instanceof C0FPacketConfirmTransaction) {
            C0FPacketConfirmTransaction transaction = (C0FPacketConfirmTransaction) packet;
            if (getDisablerModule().velocity.get()) {
                if (mc.thePlayer.hurtTime > 0 && transaction.uid < 0) {
                    event.cancelEvent();
                    alerts("Transaction Cancel (Velocity Check Disabled)");
                    return;
                }
            }
            event.cancelEvent();
            if (transaction.uid < 0) transactions.add(transaction);
            alerts("Transaction " + (transaction.uid < 0 ? "Added " : "Cancel ") + transaction.uid);
        }
    }

    @Override
    public void onUpdate(UpdateEvent event) {
        //Anti Timed Out
        if (transactions.size() >= 20) {
            for (C0FPacketConfirmTransaction transaction : transactions) {
                PacketUtils.sendPacketNoEvent(transaction);
            }
            transactions.clear();
            alerts("Transactions Clear");
        }
    }

    @Override
    public void onDisable() {
        if (!transactions.isEmpty()) {
            for (C0FPacketConfirmTransaction transaction : transactions) {
                PacketUtils.sendPacketNoEvent(
                        transaction
                );
            }
            transactions.clear();
        }
    }

    @Override
    public void onWorld(WorldEvent event) {
        transactions.clear();
        timer.reset();
        prevSlot = mc.thePlayer.inventory.currentItem;
    }
}

package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.other

import net.ccbluex.liquidbounce.LiquidBounce
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.module.modules.movement.Fly
import net.ccbluex.liquidbounce.features.module.modules.movement.Speed
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C0BPacketEntityAction

// Gracias moshi, uwu sempai onichan.

class MorganDisabler : DisablerMode("Morgan") {
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet !is C00PacketKeepAlive) {
            if (LiquidBounce.moduleManager[Fly::class.java]!!.state || LiquidBounce.moduleManager[Speed::class.java]!!.state) {
                if (mc.thePlayer.ticksExisted % 3 == 0 && packet is C03PacketPlayer) { // Previene el check de desync de morgan :P
                    PacketUtils.sendPacketNoEvent(C03PacketPlayer(true))
                }
                event.cancelEvent()
            }
        }
        if (packet is C0BPacketEntityAction) {
            if ((packet as C0BPacketEntityAction).action == C0BPacketEntityAction.Action.START_SPRINTING
                    || (packet as C0BPacketEntityAction).action == C0BPacketEntityAction.Action.STOP_SPRINTING) event.cancelEvent()
        }
    }
}
